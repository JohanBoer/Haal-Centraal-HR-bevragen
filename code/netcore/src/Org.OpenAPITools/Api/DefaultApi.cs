/* 
 * Handelsregister bevragen
 *
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op het Handelsregister beschikbaar gesteld.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// van eigenaren
        /// </summary>
        /// <remarks>
        /// Zoek de de aanschrijfwijze en het correpondentie-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>CorrespondentieAdresEigenaarHalCollectie</returns>
        CorrespondentieAdresEigenaarHalCollectie GetCorrespondentieadresEigenaar (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string));

        /// <summary>
        /// van eigenaren
        /// </summary>
        /// <remarks>
        /// Zoek de de aanschrijfwijze en het correpondentie-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>ApiResponse of CorrespondentieAdresEigenaarHalCollectie</returns>
        ApiResponse<CorrespondentieAdresEigenaarHalCollectie> GetCorrespondentieadresEigenaarWithHttpInfo (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string));
        /// <summary>
        /// van personen
        /// </summary>
        /// <remarks>
        /// Zoek maatschappelijke activiteiten correpondentie-adres op basis van het burgerservicenummer of het RSIN van de eigenaar.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ingeschrevenpersoonBurgerservicenummer">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>MaatschappelijkeActiviteitHalCollectie</returns>
        MaatschappelijkeActiviteitHalCollectie GetMaatschappelijkeActiviteiten (string ingeschrevenpersoonBurgerservicenummer = default(string), string rsin = default(string));

        /// <summary>
        /// van personen
        /// </summary>
        /// <remarks>
        /// Zoek maatschappelijke activiteiten correpondentie-adres op basis van het burgerservicenummer of het RSIN van de eigenaar.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ingeschrevenpersoonBurgerservicenummer">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>ApiResponse of MaatschappelijkeActiviteitHalCollectie</returns>
        ApiResponse<MaatschappelijkeActiviteitHalCollectie> GetMaatschappelijkeActiviteitenWithHttpInfo (string ingeschrevenpersoonBurgerservicenummer = default(string), string rsin = default(string));
        /// <summary>
        /// van een persoon
        /// </summary>
        /// <remarks>
        /// Zoek het vestigings-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>VestigingsAdresEigenaarHalCollectie</returns>
        VestigingsAdresEigenaarHalCollectie GetVestigingsadresEigenaar (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string));

        /// <summary>
        /// van een persoon
        /// </summary>
        /// <remarks>
        /// Zoek het vestigings-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>ApiResponse of VestigingsAdresEigenaarHalCollectie</returns>
        ApiResponse<VestigingsAdresEigenaarHalCollectie> GetVestigingsadresEigenaarWithHttpInfo (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// van eigenaren
        /// </summary>
        /// <remarks>
        /// Zoek de de aanschrijfwijze en het correpondentie-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of CorrespondentieAdresEigenaarHalCollectie</returns>
        System.Threading.Tasks.Task<CorrespondentieAdresEigenaarHalCollectie> GetCorrespondentieadresEigenaarAsync (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string));

        /// <summary>
        /// van eigenaren
        /// </summary>
        /// <remarks>
        /// Zoek de de aanschrijfwijze en het correpondentie-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of ApiResponse (CorrespondentieAdresEigenaarHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<CorrespondentieAdresEigenaarHalCollectie>> GetCorrespondentieadresEigenaarAsyncWithHttpInfo (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string));
        /// <summary>
        /// van personen
        /// </summary>
        /// <remarks>
        /// Zoek maatschappelijke activiteiten correpondentie-adres op basis van het burgerservicenummer of het RSIN van de eigenaar.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ingeschrevenpersoonBurgerservicenummer">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of MaatschappelijkeActiviteitHalCollectie</returns>
        System.Threading.Tasks.Task<MaatschappelijkeActiviteitHalCollectie> GetMaatschappelijkeActiviteitenAsync (string ingeschrevenpersoonBurgerservicenummer = default(string), string rsin = default(string));

        /// <summary>
        /// van personen
        /// </summary>
        /// <remarks>
        /// Zoek maatschappelijke activiteiten correpondentie-adres op basis van het burgerservicenummer of het RSIN van de eigenaar.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ingeschrevenpersoonBurgerservicenummer">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of ApiResponse (MaatschappelijkeActiviteitHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<MaatschappelijkeActiviteitHalCollectie>> GetMaatschappelijkeActiviteitenAsyncWithHttpInfo (string ingeschrevenpersoonBurgerservicenummer = default(string), string rsin = default(string));
        /// <summary>
        /// van een persoon
        /// </summary>
        /// <remarks>
        /// Zoek het vestigings-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of VestigingsAdresEigenaarHalCollectie</returns>
        System.Threading.Tasks.Task<VestigingsAdresEigenaarHalCollectie> GetVestigingsadresEigenaarAsync (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string));

        /// <summary>
        /// van een persoon
        /// </summary>
        /// <remarks>
        /// Zoek het vestigings-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of ApiResponse (VestigingsAdresEigenaarHalCollectie)</returns>
        System.Threading.Tasks.Task<ApiResponse<VestigingsAdresEigenaarHalCollectie>> GetVestigingsadresEigenaarAsyncWithHttpInfo (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApi : IDefaultApiSync, IDefaultApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DefaultApi : IDefaultApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DefaultApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DefaultApi(String basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DefaultApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public DefaultApi(Org.OpenAPITools.Client.ISynchronousClient client,Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// van eigenaren Zoek de de aanschrijfwijze en het correpondentie-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>CorrespondentieAdresEigenaarHalCollectie</returns>
        public CorrespondentieAdresEigenaarHalCollectie GetCorrespondentieadresEigenaar (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string))
        {
             Org.OpenAPITools.Client.ApiResponse<CorrespondentieAdresEigenaarHalCollectie> localVarResponse = GetCorrespondentieadresEigenaarWithHttpInfo(identificatiehandelsregisternatuurlijkpersoon, rsin);
             return localVarResponse.Data;
        }

        /// <summary>
        /// van eigenaren Zoek de de aanschrijfwijze en het correpondentie-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>ApiResponse of CorrespondentieAdresEigenaarHalCollectie</returns>
        public Org.OpenAPITools.Client.ApiResponse< CorrespondentieAdresEigenaarHalCollectie > GetCorrespondentieadresEigenaarWithHttpInfo (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string))
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (identificatiehandelsregisternatuurlijkpersoon != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "identificatiehandelsregisternatuurlijkpersoon", identificatiehandelsregisternatuurlijkpersoon));
            }
            if (rsin != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "rsin", rsin));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get< CorrespondentieAdresEigenaarHalCollectie >("/correspondentieadressen", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCorrespondentieadresEigenaar", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// van eigenaren Zoek de de aanschrijfwijze en het correpondentie-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of CorrespondentieAdresEigenaarHalCollectie</returns>
        public async System.Threading.Tasks.Task<CorrespondentieAdresEigenaarHalCollectie> GetCorrespondentieadresEigenaarAsync (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string))
        {
             Org.OpenAPITools.Client.ApiResponse<CorrespondentieAdresEigenaarHalCollectie> localVarResponse = await GetCorrespondentieadresEigenaarAsyncWithHttpInfo(identificatiehandelsregisternatuurlijkpersoon, rsin);
             return localVarResponse.Data;

        }

        /// <summary>
        /// van eigenaren Zoek de de aanschrijfwijze en het correpondentie-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of ApiResponse (CorrespondentieAdresEigenaarHalCollectie)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<CorrespondentieAdresEigenaarHalCollectie>> GetCorrespondentieadresEigenaarAsyncWithHttpInfo (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (identificatiehandelsregisternatuurlijkpersoon != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "identificatiehandelsregisternatuurlijkpersoon", identificatiehandelsregisternatuurlijkpersoon));
            }
            if (rsin != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "rsin", rsin));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<CorrespondentieAdresEigenaarHalCollectie>("/correspondentieadressen", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetCorrespondentieadresEigenaar", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// van personen Zoek maatschappelijke activiteiten correpondentie-adres op basis van het burgerservicenummer of het RSIN van de eigenaar.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ingeschrevenpersoonBurgerservicenummer">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>MaatschappelijkeActiviteitHalCollectie</returns>
        public MaatschappelijkeActiviteitHalCollectie GetMaatschappelijkeActiviteiten (string ingeschrevenpersoonBurgerservicenummer = default(string), string rsin = default(string))
        {
             Org.OpenAPITools.Client.ApiResponse<MaatschappelijkeActiviteitHalCollectie> localVarResponse = GetMaatschappelijkeActiviteitenWithHttpInfo(ingeschrevenpersoonBurgerservicenummer, rsin);
             return localVarResponse.Data;
        }

        /// <summary>
        /// van personen Zoek maatschappelijke activiteiten correpondentie-adres op basis van het burgerservicenummer of het RSIN van de eigenaar.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ingeschrevenpersoonBurgerservicenummer">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>ApiResponse of MaatschappelijkeActiviteitHalCollectie</returns>
        public Org.OpenAPITools.Client.ApiResponse< MaatschappelijkeActiviteitHalCollectie > GetMaatschappelijkeActiviteitenWithHttpInfo (string ingeschrevenpersoonBurgerservicenummer = default(string), string rsin = default(string))
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (ingeschrevenpersoonBurgerservicenummer != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "ingeschrevenpersoon__burgerservicenummer", ingeschrevenpersoonBurgerservicenummer));
            }
            if (rsin != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "rsin", rsin));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get< MaatschappelijkeActiviteitHalCollectie >("/maatschappelijkeactiviteiten", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetMaatschappelijkeActiviteiten", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// van personen Zoek maatschappelijke activiteiten correpondentie-adres op basis van het burgerservicenummer of het RSIN van de eigenaar.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ingeschrevenpersoonBurgerservicenummer">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of MaatschappelijkeActiviteitHalCollectie</returns>
        public async System.Threading.Tasks.Task<MaatschappelijkeActiviteitHalCollectie> GetMaatschappelijkeActiviteitenAsync (string ingeschrevenpersoonBurgerservicenummer = default(string), string rsin = default(string))
        {
             Org.OpenAPITools.Client.ApiResponse<MaatschappelijkeActiviteitHalCollectie> localVarResponse = await GetMaatschappelijkeActiviteitenAsyncWithHttpInfo(ingeschrevenpersoonBurgerservicenummer, rsin);
             return localVarResponse.Data;

        }

        /// <summary>
        /// van personen Zoek maatschappelijke activiteiten correpondentie-adres op basis van het burgerservicenummer of het RSIN van de eigenaar.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ingeschrevenpersoonBurgerservicenummer">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of ApiResponse (MaatschappelijkeActiviteitHalCollectie)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<MaatschappelijkeActiviteitHalCollectie>> GetMaatschappelijkeActiviteitenAsyncWithHttpInfo (string ingeschrevenpersoonBurgerservicenummer = default(string), string rsin = default(string))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (ingeschrevenpersoonBurgerservicenummer != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "ingeschrevenpersoon__burgerservicenummer", ingeschrevenpersoonBurgerservicenummer));
            }
            if (rsin != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "rsin", rsin));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<MaatschappelijkeActiviteitHalCollectie>("/maatschappelijkeactiviteiten", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetMaatschappelijkeActiviteiten", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// van een persoon Zoek het vestigings-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>VestigingsAdresEigenaarHalCollectie</returns>
        public VestigingsAdresEigenaarHalCollectie GetVestigingsadresEigenaar (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string))
        {
             Org.OpenAPITools.Client.ApiResponse<VestigingsAdresEigenaarHalCollectie> localVarResponse = GetVestigingsadresEigenaarWithHttpInfo(identificatiehandelsregisternatuurlijkpersoon, rsin);
             return localVarResponse.Data;
        }

        /// <summary>
        /// van een persoon Zoek het vestigings-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>ApiResponse of VestigingsAdresEigenaarHalCollectie</returns>
        public Org.OpenAPITools.Client.ApiResponse< VestigingsAdresEigenaarHalCollectie > GetVestigingsadresEigenaarWithHttpInfo (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string))
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (identificatiehandelsregisternatuurlijkpersoon != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "identificatiehandelsregisternatuurlijkpersoon", identificatiehandelsregisternatuurlijkpersoon));
            }
            if (rsin != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "rsin", rsin));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get< VestigingsAdresEigenaarHalCollectie >("/vestigingsadressen", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetVestigingsadresEigenaar", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// van een persoon Zoek het vestigings-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of VestigingsAdresEigenaarHalCollectie</returns>
        public async System.Threading.Tasks.Task<VestigingsAdresEigenaarHalCollectie> GetVestigingsadresEigenaarAsync (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string))
        {
             Org.OpenAPITools.Client.ApiResponse<VestigingsAdresEigenaarHalCollectie> localVarResponse = await GetVestigingsadresEigenaarAsyncWithHttpInfo(identificatiehandelsregisternatuurlijkpersoon, rsin);
             return localVarResponse.Data;

        }

        /// <summary>
        /// van een persoon Zoek het vestigings-adres van een eigenaar van een bedrijf of organisatie die deelneemt aan het economisch verkeer danwel eigenaar is van een kadastraal onroerende zaak.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="identificatiehandelsregisternatuurlijkpersoon">Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)</param>
        /// <param name="rsin">De identificatie van de NietNatuurlijkPersoon, bijvoorbeel een rechtspersoon (evt in oprichting), een samenwerkingsverband of een eenmanszaak met meerdere eigenaren (optional)</param>
        /// <returns>Task of ApiResponse (VestigingsAdresEigenaarHalCollectie)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<VestigingsAdresEigenaarHalCollectie>> GetVestigingsadresEigenaarAsyncWithHttpInfo (string identificatiehandelsregisternatuurlijkpersoon = default(string), string rsin = default(string))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/hal+json",
                "application/problem+json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (identificatiehandelsregisternatuurlijkpersoon != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "identificatiehandelsregisternatuurlijkpersoon", identificatiehandelsregisternatuurlijkpersoon));
            }
            if (rsin != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "rsin", rsin));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<VestigingsAdresEigenaarHalCollectie>("/vestigingsadressen", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetVestigingsadresEigenaar", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
